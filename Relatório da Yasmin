üìÑ Relat√≥rio Individual ‚Äì Yasmin
üóìÔ∏è Data: 02/06/2025

Na data de hoje, contribu√≠ com a parte de documenta√ß√£o do projeto no reposit√≥rio do grupo. Escrevi e organizei as se√ß√µes de introdu√ß√£o, objetivos gerais e espec√≠ficos e divis√£o de tarefas, inserindo as informa√ß√µes de forma clara no arquivo README.md.

Tamb√©m adicionei √† documenta√ß√£o o Diagrama de Atividades, previamente elaborado pelo colega Samuel, garantindo que ele estivesse corretamente inserido no reposit√≥rio e vis√≠vel no README.

Essas a√ß√µes contribu√≠ram para o avan√ßo da etapa de planejamento do projeto, garantindo a estrutura√ß√£o inicial exigida pela entrega

üìÑ Relat√≥rio Individual ‚Äì Yasmin
üóìÔ∏è Data: 08/06/2025
üõ†Ô∏è Tarefa: Identifica√ß√£o dos Atributos e M√©todos

Na atividade de hoje, desenvolvi a tarefa de identificar os atributos e comportamentos (m√©todos) das principais classes do projeto.

Uilizei o levantamento inicial de classes do projeto feito pela Maria Fernanda e identifiquei atributos para elas:

Classe Robo: atributos nome, energia e produtosIdentificados; m√©todos mover(), recarregar(), identificarProduto(int) e getNivelEnergia().

Classe Motor: atributo velocidade; m√©todo getVelocidade().

Classe Sensor: m√©todo lerSensor().

Classe Controlador: integra as outras classes e cont√©m os m√©todos executarCiclo() e mostrarStatus() para gerenciar o funcionamento do rob√¥.

Tamb√©m criei uma classe main de teste chamada SistemaRobo, respons√°vel por instanciar os objetos e simular o funcionamento do rob√¥, exibindo o status da energia e velocidade ap√≥s um ciclo de opera√ß√£o.

Por fim, organizei os arquivos no formato .zip atrav√©s do BlueJ, contendo o c√≥digo-fonte com os atributos e m√©todos implementados, e preparei o material para ser enviado ao reposit√≥rio do projeto no GitHub.

Essas a√ß√µes completam a tarefa atribu√≠da, contribuindo diretamente para a constru√ß√£o da base l√≥gica do sistema.

üìÑ Relat√≥rio Individual ‚Äì [Seu Nome]
üóìÔ∏è Data: 10/06/2025
üõ†Ô∏è Tarefa: Implementa√ß√£o de Classes Abstratas e Cria√ß√£o de Diagramas UML

Na atividade de hoje, dei continuidade ao desenvolvimento do projeto implementando as classes discutidas na √∫ltima aula em sala.

Implementei a classe abstrata Mapa, juntamente com duas subclasses concretas: CorredorSimples e CorredorObstaculos, conforme definido na tarefa em grupo. Essas classes foram implementadas com base no conceito de heran√ßa e abstra√ß√£o, refor√ßando a estrutura orientada a objetos do projeto.

Al√©m disso, elaborei o diagrama UML dessas classes, representando as rela√ß√µes de heran√ßa e os principais m√©todos e atributos envolvidos.

Tamb√©m aproveitei o momento para elaborar os diagramas UML referentes √†s classes implementadas no relat√≥rio individual anterior, incluindo:

Robo

Motor

Sensor

Controlador

Ap√≥s isso, realizei a integra√ß√£o entre os dois conjuntos de classes ‚Äì tanto as classes do relat√≥rio anterior quanto as do novo m√≥dulo de Mapa ‚Äì em um √∫nico diagrama UML geral do sistema. Essa integra√ß√£o permite uma visualiza√ß√£o mais completa da arquitetura do projeto at√© o momento, facilitando futuras expans√µes e valida√ß√µes.

Com isso, avancei tanto na implementa√ß√£o pr√°tica quanto na documenta√ß√£o visual do sistema, o que contribuir√° diretamente para o andamento do projeto coletivo.


